import groovy.json.*
import java.util.*
import java.util.HashMap;

HashMap<String, Boolean> multibranchMap = new HashMap<String, Boolean>();
HashMap<String, String> jobsMap = new HashMap<String, String>();
//HashMap<String, String> nonJobDSLMap = new HashMap<String, String>();

def nonDslMap = [
  'fullName': "type"
  ]

int countJOBDSL = 0
int countNonJobDSL = 0
int countJOBDSLInLab = 0
int countNonJobDSLInLab = 0


jobs = Jenkins.instance.getAllItems()
jobs.each { j ->
  if (j instanceof com.cloudbees.hudson.plugins.folder.Folder) { return }
  
  String strDescr = ""
  String strName  = ""
  strDescr = j.getDescription()
  strName = j.fullName
  
  boolean isJOBDSL = false;
  boolean isInLab = false;
  boolean isMultiBranch = false;
  
  if(strDescr != null)
  {
    isJOBDSL = strDescr.indexOf("generated by JobDSL") !=-1? true : false;
    isMultiBranch = strDescr.indexOf("multibranch pipeline") != -1 ? true : false
  }
  if(strName != null)
  {
    isInLab = strName.indexOf("lab/") !=-1? true: false; 
  }
  
  if(isMultiBranch)
  {
    /*
    println 'DESCRIPTION: ' + j.getDescription()
    println "[JOB not created by JOBDSL:   ]"
    */
    //println "[Job FullName isMultiBranch:  ]  ${j.fullName}"
    /*
    println "[Job type:                    ]  ${j.getClass()}"
    */
    multibranchMap.put(j.fullName, isMultiBranch);
    //println("")
   
  }
  if(!isJOBDSL && !isInLab && !isMultiBranch)
  {
    /*println 'DESCRIPTION: ' + j.getDescription()
    println "[JOB not created by JOBDSL: ]"
    println "[Job FullName:              ]  ${j.fullName}"
    println "[Job type:                  ]  ${j.getClass()}"
    */
    jobsMap.put(j.fullName, j.getClass());
    //println("")
  }
  //if(isJOBDSL && isInLab)
  //{
  //  countJOBDSLInLab += 1
  //}
  //if(!isJOBDSL && isInLab)
  //{
  //  countNonJobDSLInLab += 1
  //}
  //if(isJOBDSL && !isInLab)
  //{
  //} 
}


// Print keys and values
/*
for (String i : multibranchMap.keySet()) 
{
  println("key: " + i + " value: " + multibranchMap.get(i));
}
println("")

for (String i : jobsMap.keySet()) 
{
  println("key: " + i + " value: " + jobsMap.get(i));
}
*/


for (String i : jobsMap.keySet()) 
{
  String[] arrOfStr = i.split("/", 2);
  //println("key: " + i + " value: " + jobsMap.get(i));
  //println("key: " + i + " value: " + arrOfStr[0]);
  if(!multibranchMap.containsKey(arrOfStr[0]))
  { 
    //nonJobDSLMap.put(i,jobsMap.get(i))
    nonDslMap.put(i,"nonDSL")
    countNonJobDSL += 1;
  }
  else{ countJOBDSL += 1;}
}

println "[JOBS NOT created by JOBDSL:           ]  ${countNonJobDSL}"
println "[JOBS     created by JOBDSL:           ]  ${countJOBDSL}"
println("")

def json = new groovy.json.JsonBuilder()
json rootKey: nonDslMap
println "json output: "

println groovy.json.JsonOutput.prettyPrint(json.toString())

//println("")
//for (String i : nonJobDSLMap.keySet()) {
//  println("key: " + i + " value: " + nonJobDSLMap.get(i));
//}
//println("")
//
''
